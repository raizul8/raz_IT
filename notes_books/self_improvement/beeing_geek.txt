My first excursion into the word “trickle” was an idea called Trickle
Theory. The argument was simple: you can do more than you think
with small, consistent investments of your time.

It’s easy to forget with micromanagers and visionaries cluttering
your day with their agenda, but as the owner of the code, it’s your
job to care—daily. Whether it’s during the joy of writing the code,
the annoying days of bug fixing, or the seemingly endless maintenance
tasks, it’s your call where the code is going to go next. Are
we spending too much time on maintenance? Is it time to throw it
away and start over? Sure, it’s not necessarily your decision to make,
but it’s absolutely your responsibility to raise the issue, to have an
opinion, and to affect the plan.

This code is crap. We need to start over.

There’s a simple rule designed to grab your attention: “If you’re
not growing, you’re dying.”

Perhaps a healthier way to think of it is that your manager is responsible
for your job, but you’re the manager of your career. The
primary goal of both jobs is to identify and act on opportunity
insideof
the company that is going to challenge you, force you to
learn, and push you to the edge of discomfort.

If technical direction is your ability, and growth is the refinement
and shaping of that ability, then delivery is the reputation you construct
around that ability, and the rule is also simple: “Do what you
say you’re going to do.”

It wasn’t a big deal. They didn’t even notice. Yeah, they did. Maybe
they didn’t follow up and maybe it wasn’t that big of a deal, but
there was a brief moment when they internally measured you:
Didn’t follow up. Didn’t complete. Doesn’t care. That’s what they
remembered.

I couldn’t say no. It was my boss. When you accept a task from
your boss, whether you’re able to complete it or not, the assumption
is that you’ll do it. Saying no to the person who signs the checks
is tricky, but again, think about your reputation. Are you going to
lose more points for saying no to a task or for failing at that task?

When the boss is signing you up for failure, your move isn’t laying
down the no; your move is to tell the truth. Hey, I have no idea how
to be successful here. I care about being successful, and so should
you. Help.

A reputation is a community-based opinion that you don’t control. It
takes years of work to develop and a single missed key responsibility
to destroy.

If your work isn’t finding you in the car or on the bus, if you’re not
thinking about the things you build when your mind is wandering,
it might be a sign that you’re going through the motions with your
work.

You can go months giving the boring work half of your attention,
but it’s just a matter of time before you ignore a task that really
matters. Now you’re the person who’s looking for a gig not only
because you’re bored, but also because you’re screwing up.
You need to consider your new gig from a place of confidence. You
don’t want to be running from a mistake, but walking toward a
new opportunity.

“He left us at a tough time, but left us in good shape”?

Your motivation around looking for a new gig should be commensurate
with the confidence beating you’re about to take.

The reality is: Take the beating. Every job is a fascinating new collection
of people and responsibilities. You need to pay careful
attention
to whether you’ll fit in to this potential new gig, but even
with that due diligence, it’s a crapshoot. You’ll never know exactly
what you’ll learn, but I guarantee in the chaotic flurry of new, there
is invaluable experience to discover.

“Is it just new or is it unique? And is it progress?”

A new job is not like a new car. The morning after you bought the
car, you walk into the garage and think, “Holy shit, a new car. I
can’t believe…all the New.” Then, you get in the car and start your
drive to work swimming in the new car scent, and halfway to work
you realize, hey…it’s just a car.

What is genuinely unique about this new job?

Once you’ve defined what’s unique about the potential gig, you’ve
got a bigger question: “Is it what you what to do?” This is the career
question. This is when you figure out whether or not you know
what you want to be when you grow up.

Does this new gig fit into whatever hazy goals you have for yourself?

It’s OK to not have a solid answer to that question. I’m still working
on it, but just because you don’t have an answer to a very hard
question doesn’t mean you shouldn’t ask it.

See, you and I are still tuning to each other. It’s been 10 minutes
now, and if we’re still not adjusted to each other’s different communication
styles, I’m going to start mentally waving my internal
yellow flag. It doesn’t need to be eloquent communication, but we
should be making progress.

You are not a cog. The story we tell ourselves when someone we
like chooses to leave the group or the company is, “Everyone is
replaceable.” This is true, but this is a rationalization designed to
lessen the blow that, crap, someone we really like is leaving. We are
losing part of the team. Professional damage is done when a team
member leaves, and while they are eventually replaceable, productivity
and morale take a hit.

What is the small thing you
could have said to make that conversation more valuable?
This is everything that crosses my mind after I stop with the excuse.
I think about all the throw-away phrases I use where I could have
actually said something valuable. I once wrote, “Every time you
say blah blah blah, a creative writing teacher dies,” and I meant it.
Each time you open your mouth, you have an opportunity to build
something. That’s the perspective you want during the uncomfortable
dead silence, not the victim-based emotion of excuse.
I’m in a hurry, but being in a hurry isn’t an excuse for not taking a
small amount of time to say something real.

The transcendent Illuminator experience is when you don’t realize
the Illuminator is gently mentally course-correcting you and providing
silent guidance. The cherry on top is, even if you do see this
management manipulation, you realize, “Oh, he’s trying to help.”

Whether you’re being interrogated, randomized, or prioritized, you
need to remember two things.
First, it’s your job to figure out how to bring your calm, levelheaded
boss back into the room. Every personality save for the Illuminator
is looking for the same thing: explain to me what we’re going to do
to fix this, why this is a fix, and when is it going to be done?

The absence of some thread of an idea about how you’re going to do the impossible means you might be screwed.
The lack of a glimpse of a plan beyond the charisma translates to
a lack of hope.

The reason there’s a knee-jerk reaction is because the unexpected
occurred. It kicks off the process of assimilation, and that’s what we
care about—the understanding of the surprise, not the reaction to
it. While everyone has a different reaction, they’re all going to end
up trying to figure out what just happened, and part of that process
is having someone they trust sit there and listen to their assessment.

I’m just as uncomfortable with a Raging Bull as anyone, but I know
this knee-jerk reaction is not who they are; this is just how they
react.Understanding these varied potential reactions is just the first
part of digesting a surprise. It helps you understand what to expect
so you can begin to figure out what to do next.

As with all mental excursions with geeks, there’s a well-defined process
by which we consume a game, and it goes like this:
• Discovery
• Optimization, Repetition, and Win
• Achievement


Your question
is, “How did a task that was scrubbed into the Today bucket this
morning suddenly become irrelevant?”
The efficient, version-control-loving information pack rat in you is
going to have a problem punting a task into oblivion. Your thought
is, “Sure, it might not feel important right now, but WHAT IF!?”
Stop. Delete it. We’ve already wasted 37 seconds noodling on this
semiessential but tasteless task. Nuke it. By getting this task off
your list and out of your head, we’re making space. Don’t worry,
if the task is actually important, it’s going to find its way back to
your Parking Lot.
This deletion is advanced task management kung-fu, and it’s based
on insight I don’t like to give to new managers, because it’s a total productivity
buzzkill. The insight is: “You will never complete everything you should.”
I can do anything!
Of course you can.
Don’t tell me what I can’t do!
I’m not. What I’m telling you is that management is the art of
choosing what not to do, which means you need to be ready and
willing to look at the task at the end of a day and ask, “OK, I made
this urgent this morning. A day has passed and I had time, but never
got to it. Does it matter?”
Priority is relative. What felt so important last Wednesday loses importance
five days later when the larger context of your week, your
month, and your career shows up. You need to develop a practice
of strategic information shedding where you are constantly and intelligently
jettisoning ideas and work.
A well-maintained to-do list gives you a daily sense of professional
well-being. It constructs the pleasant illusion that you have a degree
of control in a world where you have no idea how tomorrow will
taste. The system I’ve constructed to maintain this list is lightweight,
built from the practical use of constraints, designed to sift through
an endless crapload of information that passes me during the day,
but it’s a system that is incomplete.


//
Tim: “Rands, what about THIS?”
I’m a poker player and an experienced meeting surfer, so the room
will not immediately know from the look on my face that This has
Screwed me, but what I choose to do next will define my ongoing
relationship with the room.
There are two options when you are cornered by This. Your animal
brain, when cornered, will try to find a way out. You can taste this
approach even before you begin. I am going to spin. I am going to
talk quickly and confidently about This, and I am going to hope
that in my furious verbal scurrying they are going to believe I’ve
got This handled.
That’s not what they’re seeing or hearing.
This is not your staff meeting where a little verbal soft shoe is going
to entertain and delight. These are the execs, and no matter how
many meetings you’ve surfed, they see straight through spin, they
know this dance, and the longer you sit there spinning, the longer
you give your boss an opportunity to step in, try to make the diving
save, and make you look like a blithering fool.

It takes a little practice to make the correct move when you feel the
spin coming. You are going to do three things:
1. Acknowledge the Screw-Me.
2. Admit “I don’t know.”
3. Concretely explain the steps you’re going to take to find out
and give yourself a deadline.
You have completely defused Tim. See, Tim was pissed, which is
why he waited until precisely the wrong moment to throw down
the Screw-Me. He wanted to see you spin and make a fool of yourself
in front of your management team, and what you did with the
instant acknowledgment was crush emotion with structured sanity.

Step back and look at the whole
board. Ask, “What sequence of moves is going to benefit me? Can I
see what is coming? And how could I get screwed?” Because teams
that kick ass aren’t just ones that deliver; it’s that they deliver even
when they’re screwed.

I’ve experienced a lot of different review formats at different companies,
but let’s boil it down to three buckets. A review describes:
1. What you did
2. How you did it
3. What you need to do next
This is a massive simplification of your review. Your review has all
sorts of other corporate and division focus areas, but these impressive-sounding
labels are still just lenses through which you understand
how you did versus what was expected.

While it’s important to send the self-review long before your boss
writes his review, it’s more important that you have this opinion,
this well-defined opinion, when sitting down to read your boss’s
review. Does it document what you did? Everything? Does the description
of what you did match your perception? No? Why? Don’t
tell me, tell your boss, and make sure he gets it because it’s these
types of historical perception mismatches that form an unhealthy
basis for emerging misunderstanding and resentment.
The point of a review is the debate—to align your perceptions with
those of the person who signs the checks—but even with all this
structured healthy debate, there’s still going to be a…

Surprise!
I don’t know what the surprise is. It’s your review. Some of the
doozies over the years from mine include:
• The total absence of recognition for a multi-month, multi-team
project that kicked ass.
* A reversal of opinion regarding a piece of work I’d done, usually
toward the negative.
• Completely contradictory areas of improvement.

Unfortunately, the surprise is the point. A review not only forces
the alignment discussion, it serves as a warning for the coming year:
what do I need to do differently to avoid being blindsided when the
next review arrives?
Fact is, you’re never fully going to get your boss on-board with
your year. There are opinions he has that aren’t going to change,
which means if you don’t want another surprise next year, you have
to change.
A review’s value lies not only in the documentation of what was observed,
but also what was not.

A Complete Opportunity Move
Here’s a different version of the questions:
• Where do I want to go?
• What do I want to build?
• And how do I want to build it?
As you answer these questions, other smaller questions will pop up
that matter specifically to you and that you should also explore.
How many people do you want to work with? How much do you
want to work? How much responsibility do you want? How much
stress can you handle?

You still need to able to see
how this gig fits with your personal strategic direction, as well as
answer one more question: what’s the opportunity to grow?

The managerial leap is painful. In engineering, the truth is a clear
and measurable thing. Management is a job where the truth is
blurred by endless political intrigue and personality warfare.

You will use the skills that made you a great engineer, but
there’s an entirely new set of skills you need to acquire and refine.
This sensation will appear at the end of the day when you ask, “What
did I build today?” The answer will be a troubling, “Nothing.” The
days of fixing 10 bugs before noon are gone. You’re no longer going to
spend the bus ride home working on code; you’re going to be thinking
hard about how to say something important to someone who
doesn’t want to hear it. There will be drama. And there be those
precious seconds when there is no one in your office wanting…
something.

You Will Be a Multilingual Translator
Each group in the company has a different language they speak
and a different set of needs. As a manager, you need to be able to
speak all the corporate dialects of those you depend on. Think of
the healthy tension between Engineering and QA. Remember that
flame war that went on between you and the QA guy for a week
in the bug database? Engineering and QA actually speak the same
language but have different goals. As a manager, you will discover
an entire company of languages and goals. For example:
• Sales cares about selling and doesn’t much care how hard it is
to build.
• Marketing is passionate about brand, content, and voice, and
will argue endlessly for details you find to be irrelevant.
• Tech support talks to the customer ALL DAY, but still feels no
one listens to what they say.
• Admins speak many of these languages and have more power
than you think.
Everyone believes their job is essential, everyone believes everyone
else’s job is easy, and, confusingly, everyone is right.
These roles exist for a reason. The groups each bring something
unique to the corporate organism. You can giggle and make fun of
their bizarre acronyms as an individual, but as a manager you must
speak their language, because once you do, you’re going to better
understand what they want.
Learning new languages is tricky, especially when you’re just getting
started. You’re going to spend 90 days being totally confused,
and it gets worse because there’s…
Drama Everywhere
Your manager calls you into her office first thing on a Monday
morning. It’s clearly urgent. She sits you down and starts, “I’m, uh,
making a change in the organization. Amanda is really excelling
in tools development, so I’ve asked her to take over Jerry’s management
responsibilities. I think this will make everyone more
successful.”

Wondering what happened to Jerry? Feel like you’re getting half the
story? Wrong. You’re getting 1/10th of the story. People are messy,
and a huge part of the management gig is managing this messiness.
Who knows what personal or professional issue Jerry has that is
forcing this management change? It’s really none of your business.
However, it is your manager’s business because the people are her
job.
As an individual, you’re seeing 10% of the organizational drama
your manager is seeing. I know it’s intriguing to get the full story,
but again, it’s often none of your business, and it’s not your job.
As a manager, you get front-row seats for all of the drama in all
its messy glory. This is why you have a monthly 1:1 with Human
Resources. Their job is to train you how to manage the drama. This
is why you need to become a great…
Context Switcher
This is your morning. Six 30-minute 1:1s starting at 9 a.m. This day
is unique in that in your fourth 1:1, your architect resigns. The guy
who has been designing the heart of your application for 18 months
has been poached by a start-up and had piles of money thrown at
him, and it sounds like there’s no way of saving him. Sounds grim.
What’s harder is that when your sky-is-falling 1:1 is done, you’ve
got your next one with your QA Director who has no clue your
architect
resigned, and she urgently wants to talk bug database, and
that’s exactly what you need to do. You need to quietly and confidently
forget that you’re fucked and give this team member your
full attention.
There will be a steady stream of curveballs headed in your managerial
direction, each with its own unique velocity. One of your jobs is
to not only deftly handle the pitch, however bizarre, but also shake
it off and calmly expect an even stranger one.
There’s a reason you’ll see an inordinate amount of bizarre organizational
crap as a manager. See, the individuals can handle—
and should handle—the regular stuff. You want a team of people
who aren’t bringing you every little thing, but if you successfully
build this team, your reward is that what ends up in your office is
uniquely kooky.
As these freakish pitches whiz by, you will be judged in two very
different ways. First, what did he do about the pitch? Are we going
to see more of these? Second, how was his composure as that pitch
whizzed by, missing his nose by an inch? Does it look like he handled
it, or is he freaked out and ready to bolt?
Leadership is not just about effectively getting stuff done, but demonstrating
through your composure that you aren’t rattled by the
freakish. Fortunately, one of the new tools you have to control the
proliferation of freakishness is the ability to…
Say No
This is your second most powerful tool. Whether you’re a manager,
considering management, or just here for the Rands, I want you to
pick the hardest problem on your plate. The one that is waking you
up at 4 a.m. I want you to decide and to say out loud:
“No.”
You’re not going to do that thing. QA can’t test it. Engineering
won’t finish it. If we attempt to do it, we will fail, and we don’t fail,
so the answer is “No.”
You had this tool as an individual. You could say no, but you usually
did so by cornering your manager and explaining, “Here is why
No is the right move here,” and then he’d say no.
As a manager, you are caretaker of No for you group. When it is
time to do the right thing by stopping, it’s your job to bust out the
No. You defend your team against organizational insanity with No.
No does not come without consequences. Saying No because you
can rather than because it’s right slowly transforms you into a power-hungry
jerk, but again, this is your new tool to do with as you see
fit. Also, it’s not all No; you can also…

Say Yes
Yes is how you begin building both people and things. It’s not just
a positive word; it’s the word that provides the structure for moving
forward. “Yes. Begin.” “Yes, I know he’s leaving. What are we
going to do?” And, “Why yes, we should tackle the audacious.”

“Everyone’s replaceable.”
And he’s right. Nature abhors a vacuum. When someone vital
walks out the door, you learn all sorts of interesting things about
the folks who remain.
There are certainly situations where the departure of a single key
person can lead to the collapse of a team or a company, but in this
chapter we assume the team is going to make it because although
it’s sad that a person you like is leaving, I believe you’re underestimating
everyone else.
Knowledge and Ability: “Alpha Knowledge”
The Irrational Fear: He has knowledge about the product that no
one else does. He is the only one who knows how to debug the
hard problems. He is the only one who has the entire system in his
head. He’s the guy we call when the problem is really, really hard,
and without him we won’t be able to solve really hard problems
anymore.
Don’t Worry: This is clearly your Alpha when it comes to the knowledge
of your team. The blessing and the curse of Alpha Knowledge isn’t
just that they know everything; it’s that everyone else knows that
they know. This is informationally convenient for the group because
whenever someone has a hard question, they know exactly
who to ask.
While the absence of this person is alarming, what you’ll quickly discover
is that all the answers to those questions everyone was asking
Alpha Knowledge actually stuck in the heads of those folks. In fact,
they were often asking their question as a means of confirmation
rather than as a process of discovery.See, after the third time they
ask, they know the answer. They know how it works, but Alpha
Knowledge’s presence meant they questioned themselves: “Well, I
think I know, but I’d best confirm with Alpha before proceeding.”

Mind the Gap 
My assumption is that the majority of the knowledge you believe
is in Alpha’s head has already cross-pollinated to other team members.
Alpha’s departure will give others the incentive to trust what
they already know.
But Pay Attention: While it’s likely that formerly quiet team members
will step in to fill the knowledge gap, there is knowledge and
ability walking out the door. But it’s not the broad knowledge
you’re concerned about—it’s the little undocumented knowledge.
Why is it that variable has that particular name? What is the story
behind the naming scheme for the servers? What is this cryptic note
in the code that reads, “Two more of these and we’re screwed”?
You can ask this person to document the state of the world as much
as you like, but they’re going to forget something small and something
essential to the inner workings of the product. You’re going to
discover this omission months after they’re gone, and worse, when
they’ve totally forgotten about their prior professional life. “Two
more of what things? I’ve no idea what you’re talking about.”
What you need to pay attention to when Alpha Knowledge leaves
is the team’s ability to handle the unexpected. It’s not the day-today
operations of the team that will be impacted by the absence of
Alpha. It’s when shit hits the fan that you’re really going to miss
him because it’s his undocumented improvisational skills that are
gone and are not coming back.
Again, there is essential information walking out the door, but most
of the time the group can live without that information. Teams
work around the absence because they don’t have a choice, and
once they’ve worked around it once, they’ve learned what is missing,
and they’ve updated the way that works.

The biggest risk with a key departure is that it’s an indication of a
larger movement. The biggest risk is that it’s a sign that the sky has
begun falling.


Like any industry, high tech is full of folks who are confusing success
and fame with experience. They’re thinking that showing up at
conferences, giving interviews, and writing books about things they
did in the past is experience. It’s not. It’s storytelling, and while it
might be valuable storytelling, these people are slowly becoming
echoes of who they were and moving further from the work they
did that matters. They’re confusing compliments for experience.

You may not be one of these people, but it doesn’t mean that you’re
not exhibiting the same behavior. My question is: each day, are you
struggling to build something new or just easily repeating the success
of your past? Success feels good, but you’re not actually doing
anything.

Building stuff every day exercises all the muscles necessary to remaining
vital. Experience fades and becomes irrelevant without a constant
flow of the new.

I’m happy you are kicking ass. It’s ass that needs kicking, and you
are doing it well. I believe the success-based environment can be
deliciously
deceiving. I think that much of what created that environment
was blood, sweat, and tears, and who wants more tears?
Look deeply at your favorite success story and you’re going to find a
bit of misery. It’s a great motivator, but who wants to do that again?
You do.

This book began with a mantra:
We seek definition to understand
the system so that we can discern
the rules so that we
know what to do next so that
we win.

There were two goals for this book:
1. Improve your improvisation skills of the moment.
2. Define your career strategy.

You’ll notice that “Learn enough about my world to predict what’s
next” is not included as a goal for this book, because whether
you’ve been wildly successful or not you’ll never know what’s going
to happen next, and embracing that idea is a strategic career
advantage.
More bad news: not only can you not predict what’s going to happen,
I’m pretty sure you’re not even fully appreciating what’s going
on right now.

Are you growing ?

* Have you failed recently?
• Is there someone within throwing distance who challenges you
daily?
• Can you tell me the story of something significant you learned
in the last week?

The intent behind these questions is disruption: when has something
occurred that you did not predict? It is these disruptive and decidedly
non-geek-friendly moments that engage your brain in interesting
ways, and I’m of the opinion that your brain’s reasonable and
healthy quest for happiness isn’t always aligned with your professional
growth, because your brain does not seek conflict.

• Just because you’re kicking ass doesn’t mean you’re successful.
• Misery is productive.
• Conflict is learning.

My hope is that at the end of this book you’re better equipped
to deal with misery, change, and conflict.

Knowing all of this helps, but misery, change, and conflict are going
to show up randomly, and sometimes I think you should create
them in a professionally healthy sense. Without reason, with no big
plan, just a leap in a strange direction for no other reason than to
see what it teaches you.


“We will complete our work by following the rules of mediocrity.”
Do just enough. Don’t rock the boat. Make yourself indispensable
without being noticeable.
And it works. There is absolutely no way to argue that following
the rules doesn’t result in a comfortable life, but…
Maybe you’re waiting for validation. You’re waiting for that someone
you respect to say, “Yes, you bright person, you should do that
thing.” It was your parents when you were a kid, and then it was
your first boss, but now it simply needs to be you.




